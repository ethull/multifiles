https://vim.fandom.com/wiki/Use_Vim_like_an_IDE

already configured setups
	https://github.com/SpaceVim/SpaceVim
recomended setup
        file navigation: nerdtree
        fuzzy file finder: ctrlp, fzf
        syntax highlight: vim polygot
        git: fugitive
        statusline: airline airline-themes 
        linter: ale, syntastic, some lsps
		fixer/autoformater: ale, vim-codefmt, vim-autoformat, neoformat 
        automcomplete: ycm, deoplete, lsp
    langserver (lsp) clients
        //lsp provides autocomplete and other IDE features
            //providers
                ale //hard to setup, leser features, also lints (less plugins needed)
                coc.nvim //easy to setup, many extensions

other
	https://github.com/tpope/vim-vinegar

Project/Filetree BrowsingEdit
	project gives you a "project" view of files, rather than a straight file system view
	ide Tracks files status (open/edited/closed/read only) within a project with icons; automatically builds and updates syntax highlight rules based on the project files (C/C++/Java); avoids buffer duplication.
	netrw - for information about the explorer distributed with Vim. It does not display files in a tree by default, but can by using the g:netrw_liststyle option. It also offers useful file-sorting options (by date, size, name).
	Luc Hermitte's local_vimrc, Markus "embear" Braun's local_vimrc

	Tim Pope's 	NERDTree - tree based file explorer 
	vtreeexplorer -  tree based file explorer 
	vim-projectionist - projections project managment
	
Buffer/File BrowsingEdit
    
    ctrlp - Fuzzy file, buffer, mru, tag, ... finder with regexp support. 
    FuzzyFinder - alternative to ctrlp
	bufexplorer - navigate through open buffers
	minibufexpl - buffer explorer, uses little screen space 
	lookupfile - Lookup files using Vim7 ins-completion
	Command-T - older ctrl-P, inspired by the "Go to File" window bound in  TextMate
	MRU access recently opened files.
	Code - BrowsingEdit
	taglist - outline of the source you're viewing
	Tagbar - order tags by scope, created for classes
	Indexer - generates tags for all files in project automatically and keeps tags up-to-date. Using ctags. Works well with project plugin or independently.
	CCTree - Call-Tree Explorer, Cscope based source-code browser, and code flow analyzer.
	exUtility global search, symbol search, tag track...(Like IDE/Source Insight).
	ShowMarks visually shows the location of marks.
	lh-tags automatically updates the ctags database, and provides alternatives to `:tselect` to navigate code.
	See also Browsing programs with tags and Cscope.

Writing CodeEdit
    linting (syntax)
        multi-language 
            ale (asyncronous)
            syntastic 
        language specific
            clang (C family)

syntax hightlighting (language packs)
    vim-polygot

    autocomplete
        general
            deocomplete
        A plethora of code snippet/template plugins are available, many offering TextMate-like snippet features.
        multi-language solution
            AutoComplPop gives you code completion as you type.
        language specific solution
            CRefVim A C-reference manual especially designed for Vim.
            jedi (python)
            See also Omni completion and Make Vim completion popup menu work just like in an IDE.

Vim FunctionalityEdit
	matchit - improves % matching
	bufkill - delete a buffer without closing the window.
	undotree/gundo - visualizes your undo tree
	surround - easier to delete/change/add parentheses/quotes/XML-tags/much more.
	Compilation Edit
	vim-dispatch - asynchronously run shell commands. When running a compiler, the quickfix window will be populated with any potential errors.
	Build Tools Wrapper - compile programs, and to test and execute programs,
filter compilation outputs on the fly, when compiling projects under CMake care
switch the compilation mode. The current compilation mode is displayed in the statusline of each buffer through airline plugin.

IDE integrationEdit
You may want to use your IDE for some tasks like debugging, so some integration between Vim and the IDE can be helpful.
	Integrate gvim with Visual Studio
	Eclim brings Eclipse functionality to the Vim editor.
        http://eclim.org/
Source Control IntegrationEdit
	vcscommand.vim - CVS/SVN/SVK/git/hg/bzr integration plugin
	fugitive - git integration
	perforce - perforce integration
	lawrencium - mercurial integration
	gitv - gitk clone for vim
	Splice - plugin for resolving conflicts during three-way merges
	See also Category:VersionControl

DebuggingEdit
	Bundled terminal debugger plugin (since vim 8.1, 2018-05-18)
	Clewn - gdb support: breakpoints, watch variables, gdb command completion, assembly windows, ...
	pyClewn like clewn but written in python and also supports pdb.
	vim-debug, which creates an integrated debugging environment in VIM.
	gdbvim plugin: Watch in vim what you debug in gdb. And more.
	vim-lldb: provides lldb debbuging integration.
	vim-vebugger: debugger front-end for gdb, jdb, Mdbg, pdg, Rdebug
	vdebug: Multi-language DBGP debugger client for Vim (PHP, Python, Perl, Ruby, etc.)
	vim-byebug-breakpoints: controls Ruby breakpoints for byebug (works with ruby >=2.0)
RefactoringEdit
	refactor plugin
	renamec plugin
	lh-refactor plugin
